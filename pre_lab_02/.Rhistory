umd_courses|>
group_by(department) |>
summarise(
count_classes=n()
) |>
arrange(count_classes)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
setwd("~/Github/congressional-private-travel/HouseTravelTxtFiles")
library(tidyverse)
house_travel2022 = read_delim("2022Travel.txt")
library(tidyverse)
house_travel2022 = read_delim("2022Travel.txt")
library(tidyverse)
setwd("~/Github/congressional-private-travel/HouseTravelTxtFiles")
library(tidyverse)
setwd("~/Documents/GitHub/congressional-private-travel/HouseTravelTxtFiles")
house_travel2022 = read_delim("2022Travel.txt")
house_travel2022
source("~/Github/congressional-private-travel/HouseTravelTxtFiles/Resolve_Parsing_Issue.R")
source("~/Github/congressional-private-travel/HouseTravelTxtFiles/Resolve_Parsing_Issue.R")
library(tidyverse)
setwd("~/Documents/GitHub/congressional-private-travel/HouseTravelTxtFiles")
house_travel2022 = read_delim("2022Travel.txt")
house_travel2022
source("~/Github/congressional-private-travel/HouseTravelTxtFiles/Resolve_Parsing_Issue.R")
library(tidyverse)
setwd("~/Documents/GitHub/congressional-private-travel/HouseTravelTxtFiles")
house_travel2022 = read_delim("2022Travel.txt")
house_travel2022
source("~/Github/congressional-private-travel/HouseTravelTxtFiles/Resolve_Parsing_Issue.R")
library(tidyverse)
setwd("~GitHub/congressional-private-travel/HouseTravelTxtFiles")
setwd("~/Documents/GitHub/congressional-private-travel/HouseTravelTxtFiles")
library(tidyverse)
setwd("~/Documents/GitHub/congressional-private-travel/HouseTravelTxtFiles")
house_travel2022 = read_delim("2022Travel.txt")
house_travel2022
source("Resolve_Parsing_Issue.R")
library(tidyverse)
setwd("~/Documents/GitHub/congressional-private-travel/HouseTravelTxtFiles")
house_travel2023 = read_delim("2023Travel.txt")
house_travel2023
source("~/Github/congressional-private-travel/HouseTravelTxtFiles/Resolve_Parsing_Issue.R")
source("Resolve_Parsing_Issue.R")
setwd("~/Documents/GitHub/congressional-private-travel/HouseTravelTxtFiles")
setwd("~/Documents/GitHub/congressional-private-travel/HouseTravelTxtFiles")
source("Resolve_Parsing_Issue.R")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
setwd("~/Github/congressional-private-travel/HouseTravelTxtFiles")
library(tidyverse)
house_travel = read_delim("2012to2023HouseTravel.txt")
setwd("~/Documents/GitHub/congressional-private-travel/HouseTravelTxtFiles")
library(tidyverse)
house_travel = read_delim("2012to2023HouseTravel.txt")
getwd()
setwd("~/Documents/GitHub/congressional-private-travel/HouseTravelTxtFiles")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
house_travel = read_delim("2012to2023HouseTravel.txt")
house_travel
library(tidyverse)
house_travel = read_delim("2012to2023HouseTravel.txt")
house_travel
library(tidyverse)
setwd("~/Documents/GitHub/congressional-private-travel/HouseTravelTxtFiles")
house_travel2023 = read_delim("2023Travel.txt")
house_travel2023
source("Resolve_Parsing_Issue.R")
house_travel2023 = resolve_parsing_issue(house_travel2023)
house_travel2023
house_travel2022 = resolve_parsing_issue(house_travel2022)
house_travel2022
library(tidyverse)
house_travel = read_delim("2012to2023HouseTravel.txt")
house_travel
library(tidyverse)
setwd("~/Documents/GitHub/congressional-private-travel/HouseTravelTxtFiles")
house_travel2023 = read_delim("2023Travel.txt")
house_travel2023
source("Resolve_Parsing_Issue.R")
house_travel2023 = resolve_parsing_issue(house_travel2023)
house_travel2023
house_travel2022 = resolve_parsing_issue(house_travel2022)
house_travel2022 = resolve_parsing_issue(house_travel2022)
source("Resolve_Parsing_Issue.R")
house_travel2023 = resolve_parsing_issue(house_travel2023)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
house_travel = read_delim("2012to2023HouseTravel.txt")
house_travel
library(tidyverse)
setwd("~/Documents/GitHub/congressional-private-travel/HouseTravelTxtFiles")
house_travel2023 = read_delim("2023Travel.txt")
house_travel2023
source("Resolve_Parsing_Issue.R")
house_travel2023 = resolve_parsing_issue(house_travel2023)
house_travel2023
house_travel2022 = read_delim("2022Travel.txt")
house_travel2022
house_travel2022 = resolve_parsing_issue(house_travel2022)
house_travel2022
# How many filings?
house_travel2023 |>
count(DocID)
# How many filings?
house_travel2023 |>
count(n) = DocID
# How many filings?
house_travel2023 |>
count(DocID)
# How many filings?
house_travel2023 |>
summarise(
count_DocID=n()
)
#How many amendments vs. original filings?
house_travel2023 |>
summarise(
count_FilingType=n()
)
|>
#How many amendments vs. original filings?
house_travel2023 |>
summarise(
count_FilingType=n()
) |>
filter("original")
#How many amendments vs. original filings?
house_travel2023 |>
summarise(
count_FilingType=n()
) |>
filter(original)
#How many amendments vs. original filings?
house_travel2023 |>
summarise(
count_FilingType=n()
) |>
filter("original"")
#How many amendments vs. original filings?
house_travel2023 |>
summarise(
count_FilingType=n()
) |>
filter("original"")
#How many amendments vs. original filings?
house_travel2023 |>
summarise(
count_FilingType=n()
)
#How many amendments vs. original filings?
house_travel2023 |>
summarise(
count_FilingType=n()
)
filter(FilingType == "original")
#How many amendments vs. original filings?
house_travel2023 |>
summarise(
count_FilingType=n()
) |>
filter(FilingType == "original")
#How many amendments vs. original filings?
house_travel2023 |>
summarise(
count_FilingType=n()
) |>
filter(FilingType=="original")
#How many amendments vs. original filings?
house_travel2023 |>
summarise(
count_FilingType=n()
) |>
filter(FilingType == "original")
#How many amendments vs. original filings?
house_travel2023 |>
summarise(
count_FilingType=n()
) |>
filter(FilingType = "original")
#How many amendments vs. original filings?
house_travel2023 |>
summarise(
count_FilingType=n()
) |>
filter(FilingType == "original")
#How many amendments vs. original filings?
house_travel2023 |>
summarise(
count_FilingType=n()
)
#How many amendments vs. original filings?
house_travel2023 |>
summarise(
count_FilingType=n()
) |>
filter(FilingType == "original")
#How many amendments vs. original filings?
house_travel2023 |>
summarise(
count_FilingType=n()
filter(FilingType == "original"))
#How many amendments vs. original filings?
house_travel2023 |>
summarise(
count_FilingType=n()
) |>
filter(FilingType == "original")
#How many amendments vs. original filings?
house_travel2023 |>
summarise(
count_FilingType=n()
) |>
filter(FilingType == "Original")
#How many amendments vs. original filings?
house_travel2023 |>
summarise(
count_FilingType=n()
) |>
filter (FilingType)
#How many amendments vs. original filings?
house_travel2023 |>
summarise(
count_FilingType=n()
) |>
filter(FilingType)
#How many amendments vs. original filings?
house_travel2023 |>
summarise(
count_FilingType=n()
) |>
#How many amendments vs. original filings?
house_travel2023 |>
summarise(
count_FilingType=n()
)
#How many amendments vs. original filings?
house_travel2023 |>
group_by(FilingType)
summarise(
count_FilingType=n()
)
#How many amendments vs. original filings?
house_travel2023 |>
group_by(FilingType) |>
summarise(
count_FilingType=n()
)
# How many filings? Answer:  (rows or count)
house_travel2022 |>
summarise(
count_DocID=n()
)
#How many amendments vs. original filings?
house_travel2022 |>
group_by(FilingType) |>
summarise(
count_FilingType=n()
)
#Who are the top sponsors?
house_travel2023 |>
group_by(TravelSponsor) |>
summarise(
count_TravelSponsor=n()
) |>
arrange(desc(count_TravelSponsor))
#Who are the top sponsors? Answer: Outright, the Congressional Institute
house_travel2022 |>
group_by(TravelSponsor) |>
summarise(
count_TravelSponsor=n()
) |>
arrange(desc(count_TravelSponsor))
#Who are the top travelers?
house_travel2023 |>
group_by() |>
summarise(
count_Member=n()
) |>
arrange(desc(count_Member))
#Who are the top travelers?
house_travel2023 |>
group_by(MemberName) |>
summarise(
count_Member=n()
) |>
arrange(desc(count_Member))
#Who are the top travelers? Answer:
house_travel2022 |>
group_by(MemberName) |>
summarise(
count_Member=n()
) |>
arrange(desc(count_Member))
#What are the top destinations?
house_travel2023 |>
group_by(Destination) |>
summarise(
count_Destination=n()
) |>
arrange(desc(count_Destination))
#What are the top destinations? Answer: Hot Springs, VA
house_travel2022 |>
group_by(Destination) |>
summarise(
count_Destination=n()
) |>
arrange(desc(count_Destination))
#Who are the top travelers? Answer: House Majority Leader Steve Scalise
house_travel2023 |>
group_by(FilerName) |>
summarise(
count_Filer=n()
) |>
arrange(desc(count_Filer))
#Who are the top travelers? Answer: Kevin McCarthy
house_travel2022 |>
group_by(FilerName) |>
summarise(
count_Filer=n()
) |>
arrange(desc(count_Filer))
library(tidyverse)
# Calls in all of 2012-2023 fixed files
house_travel = read_delim("2012to2023HouseTravel.txt")
library(humaniformat)
instal.packages("humaniformat")
install.packages("humaniformat")
library(tidyverse)
# Calls in all of 2012-2023 fixed files
house_travel = read_delim("2012to2023HouseTravel.txt")
library(humaniformat)
house_travel
library(tidyverse)
# Calls in all of 2012-2023 fixed files
house_travel = read_delim("2012to2023HouseTravel.txt")
library(humaniformat)
house_travel
humaniformat
library(tidyverse)
# Calls in all of 2012-2023 fixed files
house_travel = read_delim("2012to2023HouseTravel.txt")
library(humaniformat)
house_travel
knitr::opts_chunk$set(echo = TRUE)
# turn off sci notation
options(scipen=999)
library(tidyverse)
library(lubridate)
umd_courses <- read_rds("data/umd_courses.rds")
summary(umd_courses)
colnames(umd_courses)
journalism_courses <- umd_courses |> filter(department == "Journalism")
head(journalism_courses)
courses_2023 <- umd_courses |> filter(term > 202300)
head(courses_2023)
selected_journalism_courses <- journalism_courses |> select(id, title)
head(selected_journalism_courses)
theatre_seats_15 <- umd_courses |> filter(department == "Theatre") |> filter(seats >= 15)
nrow(theatre_seats_15)
and_theatre_seats_15 <- umd_courses |> filter(department == "Theatre" & seats >= 15)
nrow(and_theatre_seats_15)
and_theatre_seats_15 <- umd_courses |> filter(department == "Theatre" | seats >= 15)
nrow(and_theatre_seats_15)
maryland_expenses <- read_csv("data/maryland_expenses.csv")
head(maryland_expenses)
maryland_expenses <- maryland_expenses |> mutate(expenditure_date=mdy(expenditure_date))
head(maryland_expenses)
library(lubridate)
install.packages(lubridate)
install.packages('lubridate')
install.packages("lubridate")
knitr::opts_chunk$set(echo = TRUE)
maryland_expenses <- maryland_expenses |> mutate(expenditure_date=mdy(expenditure_date))
library(tidyverse)
library(lubridate)
maryland_expenses <- maryland_expenses |> mutate(expenditure_date=mdy(expenditure_date))
head(maryland_expenses)
library(tidyverse)
library(lubridate)
maryland_expenses <- read_csv("data/maryland_expenses.csv")
head(maryland_expenses)
maryland_expenses <- maryland_expenses |> mutate(expenditure_date=mdy(expenditure_date))
head(maryland_expenses)
setwd("~/Documents/GitHub/Navarro-Adriana-jour-722/pre_lab_02")
maryland_expenses |>
mutate(month = floor_date(expenditure_date, "month")) |>
group_by(month) |>
summarise(total_amount = sum(amount)) |>
arrange(desc(total_amount))
general_22 <- read_csv('data/md_gov_county.csv')
general_22 <- general_22 |>
mutate(
total_votes = cox + moore + lashar + wallace + write_ins,
pct_moore = moore/total_votes
)
general_22 <- general_22 |>
mutate(
total_votes = cox + moore + lashar + wallace + write_ins,
pct_moore = moore/total_votes
)
View(umd_courses)
# make it a percentage
general_22 <- general_22 |>
mutate(
pct_moore = (moore/total_votes)*100
)
# make it a percentage
general_22 <- general_22 |>
mutate(
pct_moore = (moore/total_votes)*100
)
# make it a percentage
general_22 <- general_22 |>
mutate(
pct_moore = (moore/total_votes)*100
)
# better ordering?
general_22 <- general_22 |>
mutate(
pct_moore = (moore/total_votes)*100
) |>
arrange(desc(pct_moore))
View(maryland_expenses)
general_22 <- read_csv('data/md_gov_county.csv')
general_22 <- general_22 |>
mutate(
total_votes = cox + moore + lashar + wallace + write_ins,
pct_moore = moore/total_votes
)
# make it a percentage
general_22 <- general_22 |>
mutate(
pct_moore = (moore/total_votes)*100
)
# better ordering?
general_22 <- general_22 |>
mutate(
pct_moore = (moore/total_votes)*100
) |>
arrange(desc(pct_moore))
maryland_expenses |>
mutate(month = floor_date(expenditure_date, "month")) |>
group_by(month) |>
summarise(total_amount = sum(amount)) |>
arrange(desc(total_amount))
general_22 <- read_csv('data/md_gov_county.csv')
general_22 <- general_22 |>
mutate(
total_votes = cox + moore + lashar + wallace + write_ins,
pct_moore = moore/total_votes
)
# make it a percentage
general_22 <- general_22 |>
mutate(
pct_moore = (moore/total_votes)*100
)
# better ordering?
general_22 <- general_22 |>
mutate(
pct_moore = (moore/total_votes)*100
) |>
arrange(desc(pct_moore))
View(maryland_expenses)
general_22 <- general_22 |>
mutate(
total_votes = cox + moore + lashar + wallace + write_ins,
pct_moore = moore/total_votes
)
View(general_22)
# better ordering?
general_22 <- general_22 |>
mutate(
pct_moore = (moore/total_votes)*100
) |>
arrange(desc(pct_moore))
# better ordering?
general_22 <- general_22 |>
mutate(
pct_moore = (moore/total_votes)*100
) |>
arrange(desc(pct_moore))
view(general_22)
# better ordering ?
general_22 |>
arrange(pct_moore)
standardized_maryland_expenses <- maryland_expenses |>
mutate(
payee_upper = str_to_upper(payee_name)
)
maryland_expenses_with_state <- maryland_expenses |>
mutate(
state = case_when(
str_detect(address, " Maryland ") ~ "MD",
str_detect(address, " California ") ~ "CA",
str_detect(address, " Washington ") ~ "WA",
str_detect(address, " Louisiana ") ~ "LA",
str_detect(address, " Florida ") ~ "FL",
str_detect(address, " North Carolina ") ~ "NC",
str_detect(address, " Massachusetts ") ~ "MA",
str_detect(address, " West Virginia ") ~ "WV",
str_detect(address, " Virginia ") ~ "VA",
.default = NA
)
)
view(maryland_expenses_with_state)
maryland_expenses_with_state |>
group_by(state) |>
summarize(total = sum(amount)) |>
arrange(desc(total))
