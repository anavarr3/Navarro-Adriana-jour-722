number <- 2
number*number
firstnumber <- 1
secondnumber <- 2
(firsthnumber + secondnumber) * secondnumber
(firstnumber + secondnumber) * secondnumber
install.packages('rmarkdown')
install.packages("rmarkdown")
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
# This is a comment inside of a codeblock. Comments doesn't run when we run the codeblock.
# Adding this command is a good way to start your class reference notebook.
library(tidyverse)
umd_courses <- read_rds("umd_courses.rds")
glimpse(umd_courses)
install.packages('tidyverse')
install.packages("tidyverse")
install.packages('tidyverse')
install.packages('rmarkdown')
install.packages("rmarkdown")
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse)
2+2
number <- 2
number*number
install.packages('tidyverse')
install.packages("tidyverse")
install.packages('rmarkdown')
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
# This is a comment inside of a codeblock. Comments doesn't run when we run the codeblock.
# Adding this command is a good way to start your class reference notebook.
library(tidyverse)
umd_courses <- read_rds("umd_courses.rds")
umd_courses <- read_rds("umd_courses.rds")
glimpse(umd_courses)
head(umd_courses)
View(umd_courses)
View(umd_courses)
View(umd_courses)
umd_courses |>
group_by(term) |>
summarise(
count_classes = n()
)
umd_courses |>
group_by(term) |>
summarise(
count_classes = n()
) |>
arrange(desc(count_classes))
umd_courses |>
group_by(term, department) |>
summarise(
count_classes = n()
) |>
arrange(term, department)
umd_courses |>
group_by(term) |>
summarise(
count_classes = n(),
total_seats = sum(seats)
) |>
arrange(desc(total_seats))
umd_courses |>
group_by(term) |>
summarise(
count_classes = n(),
total_seats = sum(seats),
mean_seats = mean(seats),
median_seats = median(seats)
) |>
arrange(desc(total_seats))
umd_courses |>
group_by(department) |>
summarise(
count_classes = n(),
total_seats = sum(seats),
mean_seats = mean(seats),
median_seats = median(seats),
# add minimum seats here
# add maximum seats here
) |>
arrange(desc(total_seats))
umd_courses |>
group_by(department) |>
summarise(
count_classes = n(),
total_seats = sum(seats),
mean_seats = mean(seats),
median_seats = median(seats),
min_seats = min(seats),
max_seats = max(seats)
) |>
arrange(desc(total_seats))
knitr::opts_chunk$set(echo = TRUE)
# Turn off scientific notation
options(scipen=999)
# Load the tidyverse. If you have not installed the tidyverse already, remove the # from the next line and run it first.
# install.packages('tidyverse')
library(tidyverse)
library(lubridate)
umd_courses <- read_rds("data/umd_courses.rds")
maryland_expenses <- read_csv("data/maryland_expenses.csv")
View(umd_courses)
umd_courses |>
mutate(
title = str_to_lower(title)
)
clean_umd_courses <- umd_courses |>
mutate(
title = str_to_lower(title)
)
climate_courses <- clean_umd_courses |>
mutate(
climate_class = case_when(
str_detect(title, "climate") ~ "yes"
.default = NA
climate_courses <- clean_umd_courses |>
mutate(
climate_class = case_when(
str_detect(title, "climate") ~ "yes",
.default = NA
)
)
climate_courses <- clean_umd_courses |>
mutate(
climate_class = case_when(
str_detect(title, "climate") ~ "yes",
.default = NA
)
)
view(climate_courses)
climate_courses <- clean_umd_courses |>
mutate(
climate_class = case_when(
str_detect(title, "climate") ~ "yes",
.default = NA
)
)
view(climate_courses)
A1_courses <- climate_courses |>
filter(climate_class == "yes" & seats >= 1)
climate_courses <- clean_umd_courses |>
mutate(
climate_class = case_when(
str_detect(title, "climate") ~ "yes",
.default = NA
)
)
view(climate_courses)
A1_courses <- climate_courses |>
filter(climate_class == "yes" & seats >= 1)
climate_courses <- clean_umd_courses |>
mutate(
climate_class = case_when(
str_detect(title, "climate") ~ "yes",
.default = NA
)
)
view(climate_courses)
A1_courses <- climate_courses |>
filter(climate_class == "yes" & seats >= 1)
nrow(A1_courses)
climate_courses <- clean_umd_courses |>
mutate(
climate_class = case_when(
str_detect(title, "climate") ~ "yes",
.default = NA
)
)
view(climate_courses)
A1_courses <- climate_courses |>
filter(climate_class == "yes" & seats >= 1)
nrow(A1_courses)
climate_courses <- clean_umd_courses |>
mutate(
climate_class = case_when(
str_detect(title, "climate") ~ "yes",
.default = NA
)
)
view(climate_courses)
A1_courses <- climate_courses |>
filter(climate_class == "yes" & seats >= 1) |>
nrow(A1_courses)
climate_courses <- clean_umd_courses |>
mutate(
climate_class = case_when(
str_detect(title, "climate") ~ "yes",
.default = NA
)
)
view(climate_courses)
A1_courses <- climate_courses |>
filter(climate_class == "yes" & seats >= 1)
nrow(A1_courses)
climate_courses <- clean_umd_courses |>
mutate(
climate_class = case_when(
str_detect(title, "climate") ~ "yes",
.default = NA
)
)
view(climate_courses)
A1_courses <- climate_courses |>
filter(climate_class == "yes" | seats >= 1)
nrow(A1_courses)
climate_courses <- clean_umd_courses |>
mutate(
climate_class = case_when(
str_detect(title, "climate") ~ "yes",
.default = NA
)
)
view(climate_courses)
A1_courses <- climate_courses |>
filter(climate_class == "yes" & seats >= 1)
nrow(A1_courses)
view(climate_courses)
A1_courses <- climate_courses |>
filter(climate_class == "yes" & seats >= 1)
nrow(A1_courses)
A1_courses <- climate_courses |>
filter(climate_class == "yes" & seats >= 1)
nrow(A1_courses)
A1_courses <- climate_courses |>
filter(climate_class == "yes" & seats >= 1)
nrow(A1_courses)
A1_courses <- climate_courses |>
filter(climate_class == "yes" & seats >= 1)
view(A1_courses)
Dept <- A1_courses |>
group_by("department") |>
summarise(
count_climate_class=n()
) |>
arrange(desc(seats))
Dept <- A1_courses |>
group_by(department) |>
summarise(
count_climate_class=n()
) |>
arrange(desc(seats))
Dept <- A1_courses |>
group_by(department) |>
summarise(
count_climate_class=n()
)
Dept <- A1_courses |>
group_by(department) |>
summarise(
count_climate_class=n()
)
view(Dept)
Dept <- A1_courses |>
group_by(department) |>
summarise(
count_climate_class=n()
) |>
arrange(desc(count_climate_class))
view(Dept)
org_dep <- umd_courses |>
group_by(department)
org_dep <- umd_courses |>
group_by(department)
view(org_dep)
org_dep <- umd_courses |>
group_by(department, term)
view(org_dep)
org_dep <- umd_courses |>
group_by(department, term) |>
summarise(
count_department = n()
count_term = n()
org_dep <- umd_courses |>
group_by(department, term) |>
summarise(
count_department = n(),
count_term = n()
)
view(org_dep)
org_dep <- umd_courses |>
group_by(department, term) |>
summarise(
count_term = n()
)
view(org_dep)
org_dep <- umd_courses |>
group_by(term) |>
summarise(
count_term = n()
)
view(org_dep)
fall_23 <- org_dep
filter(202308)
fall_23 <- org_dep |>
filter(202308)
fall_23 <- org_dep |>
filter(term == 202308)
fall_23 <- org_dep |>
filter(term == 202308)
view)fall_23
fall_23 <- org_dep |>
filter(term == 202308)
view(fall_23)
fall_23 <- umd_courses |>
filter(term == 202308)
view(fall_23)
dept_offered <- fall_23 |>
group_by(department)
summarise(
count_department = n()
view(dept_offered)
dept_offered <- fall_23 |>
group_by(department)
summarise(
count_department = n())
dept_offered <- fall_23 |>
group_by(department)
summarise(
count_department = n()
view(dept_offered)
dept_offered <- fall_23 |>
group_by(department) |>
summarise(
count_department = n())
view(dept_offered)
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
# Remove scientific notation
options(scipen=999)
# Load the tidyverse
library(tidyverse)
payments <- read_csv("data/State_of_Maryland_Payments_Data__FY2008_to_FY2024.csv", guess_max=10)
payments <- read_csv("data/State_of_Maryland_Payments_Data__FY2008_to_FY2024.csv", guess_max=10)
problems()
payments <- read_csv("data/State_of_Maryland_Payments_Data__FY2008_to_FY2024.csv", guess_max=373564)
glimpse(payments)
payments <- read_csv("data/State_of_Maryland_Payments_Data__FY2008_to_FY2024.csv", guess_max=10)
problems(payments)
glimpse(payments)
payments |>
group_by(`Vendor Zip`) |>
filter(str_length(`Vendor Zip`) < 5) |>
summarise(
count=n()
) |>
arrange(desc(count))
md_grants_loans <- read_csv("data/State_of_Maryland_Grant_and_Loan_Data__FY2009_to_FY2022.csv")
md_grants_loans |>
group_by(`Fiscal Year`, Category) |>
summarize(count = n()) |>
arrange(`Fiscal Year`)
md_grants_loans |>
arrange(Amount)
install.packages('janitor')
library(janitor)
# cleaning function
cleaned_md_grants_loans <- md_grants_loans |>
clean_names()
# display the cleaned dataset
cleaned_md_grants_loans
# cleaning function
cleaned_md_grants_loans <- md_grants_loans |>
clean_names() |>
rename(source = grantor)
# display the cleaned dataset
cleaned_md_grants_loans
# cleaning function
cleaned_md_grants_loans <- md_grants_loans |>
clean_names() |>
rename(source = grantor) |>
mutate(source = str_to_upper(source), grantee = str_to_upper(grantee), description = str_to_upper(description))
# display the cleaned dataset
cleaned_md_grants_loans
# cleaning function
cleaned_md_grants_loans <- md_grants_loans |>
clean_names() |>
rename(source = grantor) |>
mutate(source = str_to_upper(source), grantee = str_to_upper(grantee), description = str_to_upper(description))
# display the cleaned dataset
cleaned_md_grants_loans
cleaned_md_grants_loans |>
get_dupes()
# cleaning function
cleaned_md_grants_loans <- md_grants_loans |>
clean_names() |>
rename(source = grantor) |>
mutate(source = str_to_upper(source), grantee = str_to_upper(grantee), description = str_to_upper(description)) |>
distinct()
# display the cleaned dataset
cleaned_md_grants_loans
# cleaning function
cleaned_md_grants_loans <- md_grants_loans |>
clean_names() |>
rename(source = grantor) |>
mutate(source = str_to_upper(source), grantee = str_to_upper(grantee), description = str_to_upper(description)) |>
distinct() |>
mutate(zip5 = str_sub(zip_code, start=1L, end=5L))
# display the cleaned dataset
cleaned_md_grants_loans
setwd("~/Documents/GitHub/Navarro-Adriana-jour-722/pre_lab_03")
# cleaning function
cleaned_md_grants_loans <- md_grants_loans |>
clean_names() |>
rename(source = grantor) |>
mutate(source = str_to_upper(source), grantee = str_to_upper(grantee), description = str_to_upper(description)) |>
distinct() |>
mutate(zip5 = str_sub(zip_code, start=1L, end=5L)) |>
mutate(zip5 = case_when(
zip5 == "Vario" ~ NA,
zip5 == "UB7 O" ~ NA,
zip5 == "UB7 " ~ NA,
.default = zip5
))
# display the cleaned dataset
cleaned_md_grants_loans
md_tourism <- cleaned_md_grants_loans |>
filter(description == 'MARYLAND TOURISM BOARD GRANT') |>
summarise(
count_zip5=n()
) |>
arrange(zip5)
md_tourism <- cleaned_md_grants_loans |>
filter(description == 'MARYLAND TOURISM BOARD GRANT') |>
md_tourism <- cleaned_md_grants_loans |>
filter(description == 'MARYLAND TOURISM BOARD GRANT')
md_tourism <- cleaned_md_grants_loans |>
filter(description == 'MARYLAND TOURISM BOARD GRANT')
view(md_tourism)
md_tourism <- cleaned_md_grants_loans |>
filter(source == 'MARYLAND TOURISM BOARD GRANT')
view(md_tourism)
md_tourism <- cleaned_md_grants_loans |>
filter(source == 'MARYLAND TOURISM BOARD')
view(md_tourism)
md_tourism <- cleaned_md_grants_loans |>
filter(source == 'MARYLAND TOURISM BOARD') |>
summarise(
count_zip5=n()
) |>
arrange(zip5)
md_tourism <- cleaned_md_grants_loans |>
filter(source == 'MARYLAND TOURISM BOARD') |>
summarise(
count_zip5=n()
)
view(md_tourism)
md_tourism <- cleaned_md_grants_loans |>
filter(source == 'MARYLAND TOURISM BOARD') |>
summarise(
group_by(zip5)
)
md_tourism <- cleaned_md_grants_loans |>
filter(source == 'MARYLAND TOURISM BOARD') |>
group_by(zip5)
view(md_tourism)
md_tourism <- cleaned_md_grants_loans |>
filter(source == 'MARYLAND TOURISM BOARD') |>
group_by(zip5)
summarise(
count_zip5=n()
) |>
arrange(zip5)
md_tourism <- cleaned_md_grants_loans |>
filter(source == 'MARYLAND TOURISM BOARD') |>
group_by(zip5)
summarise(
count_zip5=n()
) |>
arrange(zip5)
md_tourism <- cleaned_md_grants_loans |>
filter(source == 'MARYLAND TOURISM BOARD') |>
group_by(zip5) |>
summarise(
count_zip5=n()
) |>
arrange(zip5)
view(md_tourism)
md_tourism <- cleaned_md_grants_loans |>
filter(source == 'MARYLAND TOURISM BOARD') |>
group_by(zip5) |>
summarise(
count_zip5=n()
) |>
arrange(count_zip5)
view(md_tourism)
md_tourism <- cleaned_md_grants_loans |>
filter(source == 'MARYLAND TOURISM BOARD') |>
group_by(zip5) |>
summarise(
count_zip5=n()
) |>
arrange((desc)count_zip5)
md_tourism <- cleaned_md_grants_loans |>
filter(source == 'MARYLAND TOURISM BOARD') |>
group_by(zip5) |>
summarise(
count_zip5=n()
) |>
arrange(desc(count_zip5))
view(md_tourism)
md_tourism <- cleaned_md_grants_loans |>
filter(source == 'MARYLAND TOURISM BOARD') |>
group_by(zip5) |>
summarise(
count_zip5=n()
) |>
arrange(desc(count_zip5))
view(md_tourism)
